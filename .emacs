(load (expand-file-name "~/quicklisp/slime-helper.el"));; Replace "sbcl" with the path to your implementation(setq inferior-lisp-program "sbcl");; Package source(require 'package)(add-to-list 'package-archives	     '("melpa-stable" . "https://melpa.org/packages/") t)(package-initialize);; CL package(require 'cl-lib);; font(add-to-list 'default-frame-alist  '(font . "DejaVu Sans Mono-13"));; theme(load-theme 'ample t t)(enable-theme 'ample);; indentation(setq tab-width 4)(defun smart-tab ()  "This smart tab is minibuffer compliant: it acts as usual inthe minibuffer. Else, if mark is active, indents region. Else ifpoint is at the end of a symbol, expands it. Else indents thecurrent line."  (interactive)  (if (minibufferp)      (unless (minibuffer-complete)	(dabbrev-expand nil))    (if mark-active	(indent-region (region-beginning)		       (region-end))      (if (looking-at "\\_>")	  (dabbrev-expand nil)	(indent-for-tab-command)))))(custom-set-variables ;; custom-set-variables was added by Custom. ;; If you edit it by hand, you could mess it up, so be careful. ;; Your init file should contain only one such instance. ;; If there is more than one, they won't work right. '(ansi-color-names-vector   ["#504545" "#ad8572" "#a9df90" "#aaca86" "#91a0b3" "#ab85a3" "#afcfef" "#bdbdb3"]) '(cua-mode t nil (cua-base)) '(custom-safe-themes   (quote    ("5846b39f2171d620c45ee31409350c1ccaddebd3f88ac19894ae15db9ef23035" "36ca8f60565af20ef4f30783aa16a26d96c02df7b4e54e9900a5138fb33808da" "c9ddf33b383e74dac7690255dd2c3dfa1961a8e8a1d20e401c6572febef61045" default))) '(global-display-line-numbers-mode t) '(package-selected-packages   (quote    (monokai-pro-theme clang-format elisp-format rainbow-mode leuven-theme jsonrpc hyperbole flymake flylisp flatland-theme evil diff-hl async ample-theme))) '(show-paren-mode t))(custom-set-faces ;; custom-set-faces was added by Custom. ;; If you edit it by hand, you could mess it up, so be careful. ;; Your init file should contain only one such instance. ;; If there is more than one, they won't work right. )